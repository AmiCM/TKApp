import tkinter as tk
import utils

class Cell:

    state = 'x'
    turn_label = None
    all_cells = [[None for i in range(3)] for i in range(3)]

    def __init__(self,x,y):
        self.button = None
        self.state = None
        self.x = x
        self.y = y
        Cell.all_cells[x][y] = self

    def make_button(self, location):
        button = tk.Button(
        location,
        text='',
        width=5,
        height=5,
        command=self.change_state
        )
        self.button = button

    ##Comando al hacer click
    def change_state(self):
        if self.state is None:
            ## cambia texto del boton
            self.button.config(text=f'{Cell.state}')
            ## cambia el estado del boton
            self.state = Cell.state
            ## cambia el turno de la clase
            self.change_turn()
            ## revisa si se gan√≥
            print(self.check_win())

    @classmethod
    def change_turn(cls):
        if cls.state == 'x':
            cls.state = 'o'
        else:
            cls.state = 'x'
        cls.turn_label.config(text=f'Turn: {cls.state}')

    ## Crea el indicador del turno
    @classmethod
    def make_turn_label(cls, location):
        if cls.turn_label is None:
            label = tk.Label(location,
                             text=f'Turn: x')
            cls.turn_label = label

    @classmethod
    def check_win(cls):
        isover = False
        newmat = [[0 for j in range(3)] for i in range(3)]
        newmat2 = [[0 for j in range(3)] for i in range(3)]
        comparelist = [['x' for i in range(3)],['o' for i in range(3)]]
        for i in range(3):
            for j in range(3):
                if cls.all_cells[i][j].state == "x":
                    newmat[i][j] = "x"
                    newmat2[j][i] = "x"
                elif cls.all_cells[i][j].state == "o":
                    newmat[i][j] = "o"
                    newmat2[j][i] = "o"
        newmat3 = [[newmat2[0][0],newmat2[1][1],newmat2[2][2]],[newmat2[2][0],newmat2[1][1],newmat2[0][2]]]
        for i in range(3):
            if (newmat[i] in comparelist) or (newmat2[i] in comparelist):
                isover = True
        for i in range(2):
            if newmat3[i] in comparelist:
                isover = True
        return isover
